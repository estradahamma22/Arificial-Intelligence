The unknown target function is the ideal function that predicts home price based off of the number of rooms. The training examples are historical data from the housing market in the 1970s. This includes the number of rooms as the explanatory variable and the house price as the response variable. The set of hypothesis functions is all of the possible formulas determined by the algorithm and within its bounds. The learning algorithm we are using is called gradient descent. This will adjust the best fit line by optimizing the amount of errors present. The final hypothesis is the function that has minimized the errors between the best fit line and the data points. The closest function that we can get to the target function in order to use the number of rooms to predict house price.  In this case the final hypothesis is 0.695*the number rooms = the price of the house in thousands.


The initialization function is where the user can optionally enter the learning rate and the number of passes the model will take over the training data. In the fit function we first calculate the error between the actual value and the model's predicted value. Then we take the partial derivative of the raw errors with respect to every weight in this case with respect to the number of rooms. We get an error matrix. Then we dot product the error matrix that we took the partial derivative of with the feature matrix. This tells us which direction to move in. Then we multiply it by the learning rate. This tells us how much we are going to move. Then to calculate the bias or the y-intercept we take the partial derivative of the errors and sum them. We sum them since it will give us a matrix because in order to multiply it with the learning rate it needs to be an integer. This gets us the gradient for the bias. Then multiply the sum of the errors by the learning rate in order to get the bias or the y-intercept. The net input function returns the estimated output in a matrix based on the slope and bias provided by the fit function. The predict function returns the model’s prediction for the best fit line to the user.